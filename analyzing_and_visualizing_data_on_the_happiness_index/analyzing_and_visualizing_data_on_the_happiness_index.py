import matplotlib.pyplot as plt
import os  # —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
import plotly.express as px #–¥–µ–ª–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é
import pandas as pd  # —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏
import urllib.request  # —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
import zipfile  # —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ zip-–∞—Ä—Ö–∏–≤–∞

# –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
urllib.request.urlretrieve('https://drive.google.com/uc?export=view&id=1jbqLpNiKaDFY4ZJngrzYuWkTHOPuqsjL','dataset.zip')

with zipfile.ZipFile('dataset.zip', 'r') as zip_ref: zip_ref.extractall('dataset')

# –í–æ–∑—å–º–µ–º –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥
# üë®üèªüíª –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å 2015 –≥–æ–¥ –Ω–∞ 2016
data2019 = pd.read_csv('dataset/2019.csv')
data2015 = pd.read_csv('dataset/2015.csv')

# –ü—Ä–æ–ø–∏—à–µ–º –≥–æ–¥
data2019['Year'] = 2019
data2015['Year'] = 2015

# –ü–æ—Å–º–æ—Ç—Ä–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ .describe()
print(data2015.describe())

# –ü—Ä–∏–≤–µ–¥–µ–º –∫–æ–ª–æ–Ω–∫–∏ –∫ –µ–¥–∏–Ω–æ–º—É –≤–∏–¥—É: —É–¥–∞–ª–∏–º –ª–∏—à–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏, –ø–µ—Ä–µ–∏–º–µ–Ω—É–µ–º –æ—Ç–ª–∏—á–∞—é—â–∏–µ—Å—è
data2015 = data2015.drop(columns=['Region',
                                  'Dystopia Residual',
                                  'Standard Error',
                                  'Lower Confidence Interval',
                                  'Upper Confidence Interval',
                                  ],
                         errors='ignore') #–µ—Å–ª–∏ –∫–∞–∫–∞—è-—Ç–æ –∏–∑ –∫–æ–ª–æ–Ω–æ–∫ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–∞, –Ω–µ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É

data2015 = data2015.rename(columns={
    'Country': 'Country or region',
    'Freedom': 'Freedom to make life choices',
    'Economy (GDP per Capita)': 'GDP per capita',
    'Health (Life Expectancy)': 'Healthy life expectancy',
    'Trust (Government Corruption)': 'Perceptions of corruption',
    'Happiness Rank': 'Overall rank',
    'Happiness Score': 'Score',
    'Family': 'Social support',
})

# –°–¥–µ–ª–∞–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –ø–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ - –æ—Ç—Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Å–ø–∏—Å–∫—É –∫–æ–ª–æ–Ω–æ–∫
data2015 = data2015[data2019.columns]
print(data2015)

# –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è - —á–∏—Å–ª–æ –æ—Ç - 1 –¥–æ 1, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–≤–∞ —Ñ–∞–∫—Ç–æ—Ä–∞ –ê –∏ B –∑–∞–≤–∏—Å—è—Ç –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞. –ï—Å–ª–∏ –ê –∏ B —Ä–∞—Å—Ç—É—Ç –∏ –ø–∞–¥–∞—é—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ,
# —Ç–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –±–ª–∏–∑–∫–∞ –∏–ª–∏ —Ä–∞–≤–Ω–∞ 1(–ø—Ä—è–º–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å). –ï—Å–ª–∏ –ê —Ä–∞—Å—Ç–µ—Ç, –∫–æ–≥–¥–∞ B –ø–∞–¥–∞–µ—Ç –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç, —Ç–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –±–ª–∏–∑–∫–∞ –∏–ª–∏ —Ä–∞–≤–Ω–∞ - 1(–æ–±—Ä–∞—Ç–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å)
# –ï—Å–ª–∏ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –ê –∏ B –Ω–µ—Ç, —Ç–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Ä–∞–≤–Ω–∞ 0
# üë®üèªüíª –í–æ–ø—Ä–æ—Å: —á–µ–º—É —Ä–∞–≤–Ω–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è A –∏ B, –µ—Å–ª–∏ B = A?
# –§—É–Ω–∫—Ü–∏—è .corr() –≤—ã–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–æ–ø–∞—Ä–Ω—ã—Ö –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π —Ñ–∞–∫—Ç–æ—Ä–æ–≤.
# - numeric_only=True - –≤–∑—è—Ç—å –¥–ª—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
correlations_table = data2019.corr(numeric_only=True)

# –í—ã–≤–µ–¥–µ–º —Ç–µ–ø–ª–æ–≤—É—é –∫–∞—Ä—Ç—É —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ px.imshow
heat_map = px.imshow(correlations_table)
heat_map.show()
#–û–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ø–∞—Ä–Ω—É—é –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é. –ß–µ–º –≤—ã—à–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è, —Ç–µ–º —Å–≤–µ—Ç–ª–µ–µ —Ü–≤–µ—Ç. –¢—É—Ç —É –Ω–∞—Å —Å—Ç—Ä–æ–≥–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä–µ–ª–ª—è—Ü–∏—è, —Ç–∞–∫ –∫–∞–∫ —á–µ–º –≤—ã—à–µ –∏–Ω–¥–µ–∫—Å —Å—á–∞—Å—Ç—å—è —É —Å—Ç—Ä–∞–Ω—ã,
#—Ç–µ–º –±–ª–∏–∂–µ –æ–Ω–∞ –∫ 1-–π —Å—Ç—Ä–æ–∫–µ –≤ —Å–ø–∏—Å–∫–µ —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö —Å—Ç—Ä–∞–Ω

# üë®üèªüíª –í—ã–≤–µ–¥–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π –¥–ª—è 2015 –≥–æ–¥–∞. –ò–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞?

#–°–∞–º–∞—è —Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å—Ç—Ä–∞–Ω–∞?
# 1. –ù–∞–π–¥–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
max_value = data2019['Score'].max()
print(max_value)

# 2. –ó–∞–¥–∞–∏–º —É—Å–ª–æ–≤–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ "—Ä–∞–≤–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é"
data2019['Score'] == max_value
print(data2015['Score'])

# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è 2015
max_value = data2015['Score'].max()
data2015['Score'] == max_value
print(data2015['Score'])

#–¢—É—Ç —Å–∞–º–∞—è —Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å—Ç—Ä–∞–Ω–∞ - –®–≤–µ–π—Ü–∞—Ä–∏—è. –ü–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –±—ã–ª–æ –≤ 2019 –≥–æ–¥—É
print(data2019[data2019['Country or region'] == 'Switzerland'])

#–ü–æ—Å—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ù–∞—Å–∫–æ–ª—å–∫–æ —Å–∏–ª—å–Ω–æ —Ä–∞–∑–±—Ä–æ—Å–∞–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è?
# –í—ã–±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç–æ–ª–±—Ü—ã, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã —Ä–µ–π—Ç–∏–Ω–≥ –∏ —Ä–µ–≥–∏–æ–Ω, —Ç–∫ –Ω–µ —É–≤–∏–¥–∏–º –ø–æ –Ω–∏–º –∫—Ä–∞—Å–∏–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è):
interesting_columns = ['Score', 'GDP per capita', 'Social support',
                       'Healthy life expectancy', 'Freedom to make life choices', 'Generosity',
                       'Perceptions of corruption']

# –ü–æ—Å—Ç—Ä–æ–∏–º violin plot (–¥–∏–∞–≥—Ä–∞–º–º–∞ —Ç–∏–ø–∞ "—Å–∫—Ä–∏–ø–∫–∞"). –í —Ñ—É–Ω–∫—Ü–∏—é px.violin –ø–µ—Ä–µ–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∏ —Å–ø–∏—Å–æ–∫ –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ y
violin_plot = px.violin(data2019, y=interesting_columns)
violin_plot.show()

# –ê–Ω–∞–ª–∏–≥–∏—á–Ω–æ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ "—è—â–∏–∫ —Å —É—Å–∞–º–∏" px.box
px_box = px.box(data2019, y=interesting_columns)
px_box.show()

# üë®üèªüíª –í–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É interesting_columns, —É–¥–∞–ª–∏—Ç–µ 'Score' –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —è—á–µ–π–∫–∏ —Å –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –≥—Ä–∞—Ñ–∏–∫–æ–≤

#–û–±—ä–µ–¥–∏–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–Ω—É —Ç–∞–±–ª–∏—Ü—É, —á—Ç–æ–±—ã –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
data = pd.concat([data2015, data2019])

# –ü–æ—Å–º–æ—Ç—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –†–æ—Å—Å–∏–∏ –ø–æ —É—Å–ª–æ–≤–∏—é
print(data[data['Country or region'] == 'Russia'])

# üë®üèªüíª –í—ã–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω—ã

#–°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
#–ü–æ—Å–ª–µ —Å–∫–ª–µ–π–∫–∏ –¥–≤—É—Ö —Ç–∞–±–ª–∏—Ü —É –Ω–∞—Å –ø–æ–ª—É—á–∏–ª–∏—Å—å 3-—Ö-–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: —Å—Ç—Ä–∞–Ω–∞ - –∏–Ω–¥–µ–∫—Å - –≥–æ–¥, –∏ –º—ã –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å –∞–≥—Ä–µ–≥–∞—Ü–∏—é –≤ –Ω–æ–≤–æ–º —Ä–∞–∑—Ä–µ–∑–µ
score_by_year = data.pivot(index='Country or region', columns='Year', values='Score')

# –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Å—Ç—Ä–æ—á–∫—É —Å –†–æ—Å—Å–∏–µ–π. –î–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è .loc
# –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –≤–Ω—É—Ç—Ä–∏ .loc[[...]]
print(score_by_year.loc[('Russia')])

# üë®üèªüíª –í—ã–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω—ã

# –ù–∞–π–¥–µ–º —Å—Ç—Ä–∞–Ω—É, –∫–æ—Ç–æ—Ä–∞—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤—ã—Ä–æ—Å–ª–∞ –∏ —Å–∏–ª—å–Ω–µ–µ –≤—Å–µ—Ö —É–ø–∞–ª–∞ –≤ –∏–Ω–¥–µ–∫—Å–µ —Å—á–∞—Å—Ç—å—è
score_by_year['diff'] = score_by_year[2019] - score_by_year[2015]

# –£–¥–∞–ª–∏–º —Å—Ç—Ä–æ—á–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∫–æ–≥–æ-—Ç–æ –∏–∑ –≥–æ–¥–æ–≤
score_by_year = score_by_year.dropna()

# –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ: sort_values('diff')
print(score_by_year.sort_values('diff'))

# üë®üèªüíª –í–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –ø–µ—Ä–≤–æ–π —è—á–µ–π–∫–µ –≤ –±–ª–æ–∫–µ "–°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞" –∏ –∑–∞–º–µ–Ω–∏—Ç–µ 'Score' –Ω–∞ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä

#–ö–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—á–∞—Å—Ç—å–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? –ß–∏—Å–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - —ç—Ç–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–æ—Ä –≤–ª–∏—è–µ—Ç –Ω–∞ –∏–Ω–¥–µ–∫—Å.
# –ß—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å –≤ —Å—Ä–µ–¥–Ω–µ–º —Ñ–∞–∫—Ç–æ—Ä —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –≤–ª–∏—è–Ω–∏–µ–º, –≤–æ–∑—å–º–µ–º —Å—Ä–µ–¥–Ω–µ–µ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–ª–æ–Ω–∫–∏(axis=0) üë®
print(data.mean(axis=0, numeric_only=True))

# üèªüíª –ö–∞–∫–æ–π —Ñ–∞–∫—Ç–æ—Ä –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤–ª–∏—è–ª –Ω–∞ Score?

# üë®üèªüíª –ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Ç–∞–∫–æ–π –∂–µ —Ä–∞—Å—á–µ—Ç –¥–ª—è 2015 –∏ 2019 –≥–æ–¥–∞ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏. –ò–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –∫–∞—Ä—Ç–∏–Ω–∞?
